on:
  workflow_call:

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    outputs:
      terraform: ${{ steps.changes.outputs.terraform }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          terraform:
            - '**/*.tf'

  get-matrix-directories:
    needs: changes
    if: ${{ needs.changes.outputs.terraform == 'true' }}
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        working-directory: ./examples
        run: echo "matrix=$(ls | jq -R -s -c 'split("\n")[:-1]')" >> "$GITHUB_OUTPUT"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  localstack-plan:
    needs: get-matrix-directories
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folders: ${{ fromJson(needs.get-matrix-directories.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Start LocalStack
        uses: LocalStack/setup-localstack@main
        with:
          image-tag: 'latest'
      - name: Install tflocal
        run: pip install terraform-local
      - name: Test API
        working-directory: ./examples
        run: |
          cd "${{ matrix.folders }}"
          tflocal init
          tflocal plan

  # This is needed because matrix tests have dynamic workflow names based on the folder name. This is something we cannot make a required test from.
  # Because skipped tests are marked as succesfull in GitHub required test, we test here if it was succesfully run and then mark it as such, if it's skipped or fails then it's marked as failed.
  completed:
      if: ${{ always() }}
      runs-on: ubuntu-latest
      needs: [changes, localstack-plan]
      steps:
        - run: |
            if [[ ${{ needs.changes.outputs.terraform }} == "false" ]]
            then
              exit 0
            elif  [[ ${{ needs.localstack-plan.result }} == "success" ]]
            then
              exit 0
            else
              exit 1
            fi
