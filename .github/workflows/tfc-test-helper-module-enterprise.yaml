# This is version of the workflow is nearly the same as 'tfc-deploy.yaml', save
# for the fact that it relies on an enterprise feature which allows us to protect
# the environment (containing the Terraform Cloud token).
#
# Can be run by either accessing a repository environment containing all the
# required variables, or by passing the variables explicitly as inputs:
#
# For environment method:
#
#   - Pass the input 'environment_name', being the name of the environment with
#     the variables
#   - Pass the secrets by setting 'secrets: inherit' on the calling job
#
# For either method, the following must be available either via inputs or the
# environment:
#
# - 'tfc_organization'
# - 'tfc_api_token' (secret),
# - 'tfc_planner_api_token' (secret)
# - 'tfc_workspace'
#
# If 'environment_name' is supplied, it will win for any values found in both
# inputs and that environment

on:
  workflow_call:
    inputs:
      environment_name:
        description: The Github environment containing all the variables needed
        required: false
        type: string
        default: ''

jobs:
  get-example-directories:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Get LS Output
        id: matrix_step
        run: |
          list=$(ls -1);
          matrix_values=$(echo '[ "'"$(echo "$list" | sed ':a;N;$!ba;s/\n/", "/g')"'" ]')
          echo "Matrix values: $matrix_values"
          echo "matrix_values=$matrix_values" >> $GITHUB_OUTPUT
      # - id: matrix
      #   working-directory: ./examples
      #   run: |
      #    VALUE=`ls | jq -R -s -c 'split("\n")[:-1]'`
      #    echo $VALUE >> $GITHUB_OUTPUT
      # - run: |
      #     echo "${{ steps.matrix.outputs.matrix_values }}"
    outputs:
      matrix-combination: ${{ steps.matrix_step.output.matrix_values }} 


  tf-test-localstack:
    needs: [ get-example-directories ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        value:  ${{ fromJSON(needs.setup-matrix.outputs.matrix-combinations) }}
    steps:
      - uses: actions/checkout@v4
      - name: Start LocalStack
        uses: LocalStack/setup-localstack@main
        with:
          image-tag: 'latest'
      - name: Install tflocal
        run: pip install terraform-local
      - name: Test API
        run: |
          cd "${{ matrix.value }}"
          tflocal init
          tflocal plan