on:
  workflow_call:
    inputs:
      environment_name:
        description: The Github environment to deploy to.
        required: true
        type: string
        default: 'localstack'
    outputs:
      changes:
        description: "Output from changes GH Actions"
        value: ${{ jobs.changes.outputs.terraform }}

jobs:
  changes:
    runs-on: ubuntu-latest
    # permissions:
    #   pull-requests: read
    outputs:
      terraform: ${{ steps.changes.outputs.terraform }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          terraform:
            - '**/*.tf'

  get-matrix-directories:
    needs: changes
    if: ${{ needs.changes.outputs.terraform == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        working-directory: ./examples
        run: echo "matrix=$(ls | jq -R -s -c 'split("\n")[:-1]')" >> "$GITHUB_OUTPUT"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      
  localstack-apply:
    needs: get-matrix-directories
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment_name }}
    strategy:
      matrix:
        folders: ${{ fromJson(needs.get-matrix-directories.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Start LocalStack
        uses: LocalStack/setup-localstack@main
        with:
          image-tag: 'latest'
      - name: Install tflocal
        run: pip install terraform-local
      - name: Test API
        working-directory: ./examples
        run: |
          cd "${{ matrix.folders }}"
          tflocal init
          tflocal apply --auto-approve

  # This is needed because matrix tests have dynamic workflow names based on the folder name. This is something we cannot make a required test from.
  # Because skipped tests are marked as succesfull in GitHub required test, we test here if it was succesfully run and then mark it as such, if it's skipped or fails then it's marked as failed.
  completed:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [changes, localstack-apply]
    steps:
      - run: |
          if [[ ${{ needs.changes.outputs.terraform }} == "false" ]]
          then
            exit 0
          elif  [[ ${{ needs.localstack-apply.result }} == "success" ]]
          then
            exit 0
          else
            exit 1
          fi